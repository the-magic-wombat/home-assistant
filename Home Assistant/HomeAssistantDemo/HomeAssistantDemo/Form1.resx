<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACjDgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAADmpJ
        REFUeNrtnW2oHFcZgN935py5tqVNjVaK4qVVr6WgtVZpki0SG78oUoL0VgpWQtVqBNkqFmurZNlKEhD8
        0ZUqKK0G+kPKail+5IfFUCUbUmn9hFqXYmkQicHQz9i7c2aOP7I33iQ3yf3YvTtnzvP8uzfJfpx5n2dn
        Z3cmIgAAAAAAAAAQA8oSxEOj2ZoRkdlz/LVur9Pus1oEAGoivC/cej+Yu0azqQ2amgvO9m984V71g7mD
        mk09pak5ShAIAAQqvXi/TY29ZDW3511+RFT3EAMCAAHI7wt3n6bmhnHcvi/cXk3NHUSAAEDVxPflNinL
        pqbmwnHely/cy5IkHdVkDyEgAFAF+V3+QzV281rer3f5b9TY7USAAMAk5c8HP1ebXTGJ+/f54Bm12Y1E
        gADAJOR3+WNq7PQkH4d3+fNq7IeJAAGAyOQnAgQAIpefCBAAiFx+IkAAIHL5iQABgMjlJwIEACKXnwgQ
        AIhcfiJAACBy+YkAAYDI5ScCBAAil58IEACIXH4iQAAgcvmJAAGAyOUnAgQAIpefCBAAiFx+IkAAkD9y
        +YkAAUD+yOUnAgRg5GLJ8D++KOf++y4pyzeMbKGS9LBOve5vwx9XfHls5CcCBGBM4ns3+Kya7O1jH9bj
        18Lbs9wQID8RIABjkN+7/GE19uoJDOwBNXbbUgYW+YkAARiL/O4JNebiCQ7sYTX2A2cbWOQnAgRgHPIX
        7veamnWTH1j3ghpz7WIDi/xEoMokwcrv8n1VkF9ERI252OeDnw+PRSD/SNbUTnuXP3bqmkLkARi+8n9H
        jX1LpQbWZlf4svgM8hOBoNY4wADcLSK7qvjYfFEc0zS9WkQE+Ue4rrwdGBvB7QH4wq2v6mPTND3fe78D
        +Ue8ruwJjG9tQ3qwJ977V2z3H9YG9gRGT2h7ALPIHy/sCRAAIAJEgAAAESACBACIABEgAEAEWA0CAEQA
        CAAQASAAQASAAAARAAIARAAIABABIABABIAAABEgAABEgAAAEAECAEAECAAAESAAAESAAAAQAQIAQAQI
        AAARIAAARIAAABABAgBABAgAABEgAABEgAAAEAECAEAECAAAESAAAESAAAAQAQIAQAQIAAARIACwZniX
        Hy2PvfJUeeyVp7zLD7MicUbAsEljEX7wpJrspwsGuXvge7v6IiLDYZ498XfzucslST+pqVnHyp01Ah/u
        ddr9oJ9LSA+20WzdLSK7GMElSl+4F0X1+5qkL4lIdznDOh8F7/LPq7GXsZqLrK/Ln1djg44AAajrcJbF
        I5qkd612OBvN1oz35TYpyy9rai5gZesVAY4B1G8gnxORe0Yhv4hIr9PuH/jut76pqXmvzwdPs8InE/ox
        AQJQL/n3q7Ef7XXau0f9itTrtPtqs63e5ftZ6fpEgADUS/7bxrkr2uu0+2rsbUSgPhEIJgCNZmvGu3w7
        ozYZ+YlAPSMQxEHAofyPqbHTjNnk5F9km/xIjb2OrXDaNgnmwGDlA4D81ZOfCNQnApUOAPJXV34iUI8I
        VDYAyF99+YlA+BGoZACQPxz5iUDYEahcAJA/PPmJQLgRqFQAkD9c+YlAmBGoTACQP3z5iUB4EahEAJC/
        PvITgbAiMPEAIH/95CcC4URgogFA/vrKTwTCiMDEAoD89ZefCFQ/AhMJAPLHIz8RqHYE1jwAyB+f/ESg
        uhFY0wAgf7zyE4FqRmDNAoD8yE8EqheBNQkA8iM/EahmBMYeAORHfiJQ3QiMNQDIj/xEoNoRGFsAkB/5
        iUD1IzCWACA/8hOBMCIw8gAgP/ITgXAiMNIAID/yE4GwIjCyACA/8hOB8CIwkgAgP/ITgTAjsOoAID/y
        E4FwI7CqACA/8hOBsCOw4gAgP/ITgfAjsKIAID/yE4F6RGDZAUB+5CcC9YnAsgKA/MhPBOoVgSUHAPmR
        nwjULwJLCgDyIz8RqGcEzhkA5Ed+IlDfCCjyIz8RiDcCivzITwTijYAiP/ITgXgjkCy+kIO9yI/8IdHr
        tPtq7G3e5ftZjZNRY6e9G+xtNFszp/5Zerr8+R412VUsG/KHxqGDjx+d3rTld97l12iS8gK2MAJJut67
        /P3Tm7b89tDBx4+eFoBGszXjy/JeTc0NLBfyE4FaRuCtviwvmd54/Z/nI7DwLcCsJsktLBPyhw5vB84W
        geQWEZmd/zkRObHr/3GWB/mJQBRz/bH54wHzewCzHD1FfiIQB2rsZhnuBaTDV/+vaJJextIgf93gmMAZ
        Z9xMb9qyP5Hjr/6bWRLkryvsCZzO/F5AwlIgPxGIl6R87dhGlgH5iUB8lK8de3+iNrse+ZGfCMSH2uwj
        iabmQuRHfiIQYQBSc2HUxwCQnwjEHoFoA4D8QAQiDQDyAxGIOABq7C+RH06JwC8JAAAQAAAgAABAAACA
        AABA/QLgXX6YZQCID+/yw4l4/zOWAiDGAvifJWqzQ6wEQHyozQ4lItL1Lj/KcgDEg3f5ERHpJr1Ouy9J
        8gOWBCAikuSBXqfdT0RENEkf9EVxjFUBqD++cK9qkj4oMvwYsNdp90Wlw9IARIDqd+fPhTnxPQBN0ge9
        GzzL6gDUF+8Gz86/+p8UgONnRGUPsEQA9UVN9sDCM2FP/SZg15flT1gmgPoxdLu78HcnBaDXafc1SXb4
        wu1luQBqJH/h9mqS7Dj1OhinnQvQ67T7mpo7iABAjeRPzR2LXQRn0ZOBiABA/eU/YwCIAED95T9rAIgA
        QL3lP2cAToqA9w+t+ZPw/hE2JQQt4gRm2Hv/0FLkX1IATkRA9V4Rucfng6fH/gTywV9E5B5V5YtJEDTD
        GV4rb54eenPvUq96veQrAvU67X6v096tNtvqfblzHBcS8S4/7H25U212U6/T3i0inKUIoXN0Db3Z2uu0
        dy/nkvdmuXc2vPFvNpqtPd6X26Rwt6jJ3r66JzD4u5rsx2psl+v1Qx1Z6I2IzHo3+OwIvHlWUvMTNXbP
        Sr0xI3tCZXGRH8xdrTa77lz/4agv3Ms+n/utTp33R9XkVTUZ4kNMIdjdaLa6IjLrfXmBn3vtfUv3ZrBf
        s6k/apK+NApvzKie0PzPjWZrRkRmz/ZvNDXdA/fvRHiIPgST9saM+4kBQHW94bLgABFDAAAIAAAQAAAg
        AABAAACAAAAAAQAAAgAA9cGwBLBcFn5t1bv8Td7lbxNfvlG8vG5FN6j6H0mSI8nUeX8d/oZzQwgAVFF8
        78ttPh/Mqs2uEBFRY0WNHen9+MLdtemLX39Y7dQ/iAEBgCqIXxaf8YX7oqZmndhsrPenqVknqbldRMS7
        fGuj2XqUEBAAmID4IjLrXb5djZ2exGNQYzeIyAZfuE2NZuurRGC0cBAQzii/L8udIrJrUvKfFILU3Ojd
        4BfDKAEBgLHKX7j7NElurtLjUpO90xfuyUazdTchIAAwLvld/kNNzQ1VfHzDq+bsknNcPAMIAKxE/sLd
        p8Zurvpj9YW7i70AAgCjlMqX26r6yn8qmpp1HBMgADAiGs3WjJT+KyE95uExge8QAQIAq5T/+Pv+9PzQ
        Hrum5kbheAABgFUxG8L7/jMx/LIQewEEAJbL8NX/xpCfw/DLQuwFEABYAbNq7KbQn4TP5y5nUxIAWK44
        ZXFRPSbZfIq3AQQAlkGj2ZqRovhEHZ7L8AAmbwMIACyDE6f11gFfuPVsUgIAkeLzuStZBQIAkaImu5bj
        AAQAog2AvUQ4DkAAAIAAAAABAAACAAAEAAAIAAAQAAACAAAEAAAIAAAQAAAgAABAAACAAAAAAQAAAgAA
        BAAACAAAEAAAIAAAQAAAgAAAAAEAAAIAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAAAEAABiCUDXu/wI
        mwlCxLv8sIh0CcAK6XXafZ/PPTeGDXMp4wnjngmfzz3f67T7BGA1qP57DLd6a6PZmmHsQURkOAu3BjK7
        cQVAU/v8yG/T2PXe+x1EABrN1oz3focauz6E2Y0vADY7NJbbVb1VRGZRIHpmh7MQzOxGFYBx4l2+nb2A
        eGk0WzPe5dtjXgMTwGPs+sJ9Q1NzwahvWI2d9s490Wi2vi0i3aofsIHRiS8is97ld45j119ExBfuVU1N
        pT8BCCIAvU67v/ELX/uVpubmcdy+GnOxiOzyLt/aaLYeHf6aGNRUehER7/KtauwGNXZs9+dd/qsD9++s
        /AyFsAcgydR5fxCRm8d5H2rsBhHZMNx4zY233/mnukvh88G02qxuz+nTG2+/c/MiQr5Hjb10uK3XamYr
        TxABWGvU2EvnhwUC23Y2u1JtdiUrsTRCOQjY9YX7NZsLQmA4q5V//x9MAHqddl9Ts4/RghDQ1OwL5RhS
        SB8Ddr3LDzJeUGWGMxrEq39QAeh12n019lFGDKqMGvtoSJ8ghfZFoK4v3F7GDKrIcDaDefUXEdHQFvn4
        t7fcE8PP7wGqIb/Lj6ix14X2/ZE0tIU+dPDxo9ObtiQi8iHGDqqCJunOXqcd3FvUUM8F6PqyeISxgyow
        nMWgdv3nCW4PQGS4F7Dx+qe8y6/RJJ1mBGFi8rt8v6bmS6F+dTy4YwALaTRbMz4f/FRt9m5GEdZc/nzw
        F7XZTSGfNxJ0AIgAIP/qCP56AL1Ou682u8m7wZOMJayJ/G7wZB3kFwn0GMCpHP9k4EP7fOHeoUnCBT5g
        fPIXbq8a+7m6nC5eiwD8PwJbnvDev15Vr2JUYeTye/+QJunddbpWRG0CcCICGz/4VxH5l3eDizVJ38zY
        wqrFd/lBTdLvqer363ahmOAPAp6JBZd9anJuP6xQ/H+qsfdLja8QVdsALBKCz6uxlzHWsATxn1Njf1Bn
        8aMJwGkhyOculyT9pKZmHaMOJ6Qv3ItSFg+rnfpHDOJHF4BFY1AWF/nB3BVqsus5uSgy4Z17wbvBPs2m
        ntEkfSkm6aMPwJmCwEpEBVd+BgAAAAAAAIBo+B/EVEhubGLD2gAAAABJRU5ErkJggg==
</value>
  </data>
</root>